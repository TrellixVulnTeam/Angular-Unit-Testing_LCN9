{"ast":null,"code":"'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n  typeof define === 'function' && define.amd ? define(factory) : factory();\n})(function () {\n  'use strict';\n  /**\n   * @license\n   * Copyright Google LLC All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n  var SyncTestZoneSpec =\n  /** @class */\n  function () {\n    function SyncTestZoneSpec(namePrefix) {\n      this.runZone = Zone.current;\n      this.name = 'syncTestZone for ' + namePrefix;\n    }\n\n    SyncTestZoneSpec.prototype.onScheduleTask = function (delegate, current, target, task) {\n      switch (task.type) {\n        case 'microTask':\n        case 'macroTask':\n          throw new Error(\"Cannot call \" + task.source + \" from within a sync test.\");\n\n        case 'eventTask':\n          task = delegate.scheduleTask(target, task);\n          break;\n      }\n\n      return task;\n    };\n\n    return SyncTestZoneSpec;\n  }(); // Export the class so that new instances can be created with proper\n  // constructor params.\n\n\n  Zone['SyncTestZoneSpec'] = SyncTestZoneSpec;\n});","map":{"version":3,"sources":["C:/Users/kevin95822/Desktop/Angular project/unit_testing/PSAngularUnitTestingCourse/node_modules/zone.js/dist/sync-test.js"],"names":["factory","define","amd","SyncTestZoneSpec","namePrefix","runZone","Zone","current","name","prototype","onScheduleTask","delegate","target","task","type","Error","source","scheduleTask"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACC,WAAUA,OAAV,EAAmB;AAChB,SAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACD,OAAD,CAAnD,GACIA,OAAO,EADX;AAEH,CAHA,EAGE,YAAY;AACX;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;AACI,MAAIG,gBAAgB;AAAG;AAAe,cAAY;AAC9C,aAASA,gBAAT,CAA0BC,UAA1B,EAAsC;AAClC,WAAKC,OAAL,GAAeC,IAAI,CAACC,OAApB;AACA,WAAKC,IAAL,GAAY,sBAAsBJ,UAAlC;AACH;;AACDD,IAAAA,gBAAgB,CAACM,SAAjB,CAA2BC,cAA3B,GAA4C,UAAUC,QAAV,EAAoBJ,OAApB,EAA6BK,MAA7B,EAAqCC,IAArC,EAA2C;AACnF,cAAQA,IAAI,CAACC,IAAb;AACI,aAAK,WAAL;AACA,aAAK,WAAL;AACI,gBAAM,IAAIC,KAAJ,CAAU,iBAAiBF,IAAI,CAACG,MAAtB,GAA+B,2BAAzC,CAAN;;AACJ,aAAK,WAAL;AACIH,UAAAA,IAAI,GAAGF,QAAQ,CAACM,YAAT,CAAsBL,MAAtB,EAA8BC,IAA9B,CAAP;AACA;AANR;;AAQA,aAAOA,IAAP;AACH,KAVD;;AAWA,WAAOV,gBAAP;AACH,GAjBqC,EAAtC,CATW,CA2BX;AACA;;;AACAG,EAAAA,IAAI,CAAC,kBAAD,CAAJ,GAA2BH,gBAA3B;AACH,CAjCA,CAAD","sourcesContent":["'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n        factory();\n}((function () {\n    'use strict';\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SyncTestZoneSpec = /** @class */ (function () {\n        function SyncTestZoneSpec(namePrefix) {\n            this.runZone = Zone.current;\n            this.name = 'syncTestZone for ' + namePrefix;\n        }\n        SyncTestZoneSpec.prototype.onScheduleTask = function (delegate, current, target, task) {\n            switch (task.type) {\n                case 'microTask':\n                case 'macroTask':\n                    throw new Error(\"Cannot call \" + task.source + \" from within a sync test.\");\n                case 'eventTask':\n                    task = delegate.scheduleTask(target, task);\n                    break;\n            }\n            return task;\n        };\n        return SyncTestZoneSpec;\n    }());\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['SyncTestZoneSpec'] = SyncTestZoneSpec;\n})));\n"]},"metadata":{},"sourceType":"script"}